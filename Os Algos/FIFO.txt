FIFO ALGORITHM: 
1. Start the process 
2. Read number of pages n 
3. Read number of pages no 
4. Read page numbers into an array a[i] 
5. Initialize avail[i]=0 .to check page hit 
6. Replace the page with circular queue, while re-placing check page availability in the frame Place avail[i]=1 if page is placed in theframe Count page faults 
7. Print the results. 
8. Stop the process.

FIFO Program :
#include<stdio.h> 
int fr[3]; 
void main() 
{ 
void display(); 
int i,j,page[12]={2,3,2,1,5,2,4,5,3,2,5,2}; 
int flag1=0,flag2=0,pf=0,frsize=3,top=0; 
 
for(i=0;i<3;i++) 
{ 
fr[i]= -1; 
} 
for(j=0;j<12;j++) 
{ 
flag1=0; flag2=0; for(i=0;i<12;i++) 
{ 
if(fr[i]==page[j]) 
{ 
flag1=1; flag2=1; break; 
} 
} 
if(flag1==0) 
{ 
for(i=0;i<frsize;i++) 
{ 
if(fr[i]== -1) 
{ 
fr[i]=page[j]; flag2=1; break; 
} 
} 
} 
if(flag2==0) 
{ 
fr[top]=page[j]; 
top++; 
pf++; 
if(top>=frsize) 
top=0; 
} 
display(); 
} 
printf("Number of page faults : %d ",pf+frsize); 
getch(); 
} 
void display() 
{ 
int i; printf("\n"); 
for(i=0;i<3;i++) 
printf("%d\t",fr[i]); 
} 

